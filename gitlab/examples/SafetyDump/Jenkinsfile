library identifier: 'rt-ci-common@master',
    retriever: modernSCM(
        [
            $class: 'GitSCMSource',
            remote: 'https://github.com/m0rv4i/RT-Jenkins-Piplines-Common.git'
        ]
    )


pipeline {

    agent {
        label 'Windows'
    }

    post {
        success {
            updateGitlabCommitStatus name: 'build', state: 'success'
            slackNotifyDeployed()
        }
        failure {
            updateGitlabCommitStatus name: 'build', state: 'failed'
            slackNotifyPipelineFailed()
        }
    }

    options {
        timestamps()

        buildDiscarder(logRotator(numToKeepStr: '5'))

        gitLabConnection('Gitlab')
    }

    triggers {
        gitlab(triggerOnPush: true, triggerOnMergeRequest: true, branchFilterType: 'All', secretToken: "c5db392d34e4dae4d1a34ccdb9232512") // TODO don't store here
    }

    parameters {
        string name: 'ProjectID', defaultValue: 'No Project', description: 'ProjectID associated with the build.', trim: true
    }

    stages {

        stage('build-and-analyse') {
            steps {
                runMsbuildWithSonar()
            }
        }

        stage('deploy') {
            steps{
                script{
                    def uploadPattern = "${JOB_NAME}/bin/Release/*.exe"
                    def targetRepo = "engagements/${params.ProjectID}/${JOB_NAME}/"
                    def props = "language=csharp;ext=exe;type=postex;"

                    deployToRtArtifactory(uploadPattern, targetRepo)
                }
            }
        }

        stage('cleanup') {
            steps {
                cleanup()
            }
        }

    }

}
